// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model PerfilDoJogo {
  id                   String         @id @default(auto()) @map("_id") @db.ObjectId
  jogador_id           String         @db.ObjectId
  jogo_id              String         @db.ObjectId
  nickname             String
  personagem_favorito  String?
  nivel                String
  frequencia_joga      String
  jogador              Usuario        @relation("UsuarioPerfil", fields: [jogador_id], references: [id])
  jogo                 Jogo           @relation("JogoPerfil", fields: [jogo_id], references: [id])
  publicacoes          Publicacao[]   @relation("PublicacaoPerfil")
  convites_enviados    Convite[]      @relation("ConviteRemetente")
  convites_recebidos   Convite[]      @relation("ConviteDestinatario")
}

model Usuario {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  nome               String
  email              String         @unique
  senha              String
  descricao          String?
  foto               String?
  discord            String?
  perfis             PerfilDoJogo[] @relation("UsuarioPerfil")
  publicacoes        Publicacao[]   @relation("PublicacaoAutor")
  notificacoes       Notificacao[]  @relation
}

model Convite {
  id                         String       @id @default(auto()) @map("_id") @db.ObjectId
  perfil_remetente_id        String       @db.ObjectId
  perfil_destinatario_id     String       @db.ObjectId
  status                     String
  data_envio                 DateTime
  perfil_remetente           PerfilDoJogo @relation("ConviteRemetente", fields: [perfil_remetente_id], references: [id])
  perfil_destinatario        PerfilDoJogo @relation("ConviteDestinatario", fields: [perfil_destinatario_id], references: [id])
}

model Notificacao {
  id         String         @id @default(auto()) @map("_id") @db.ObjectId
  usuario_id String         @db.ObjectId
  mensagem   String
  lida       Boolean        @default(false)
  data       DateTime       @default(now())
  usuario    Usuario        @relation(fields: [usuario_id], references: [id])
}

model Publicacao {
  id                  String        @id @default(auto()) @map("_id") @db.ObjectId
  titulo              String
  autor_id            String        @db.ObjectId
  perfil_id           String        @db.ObjectId
  descricao           String
  nivel_desejado      String
  horario_disponivel  String
  data_criacao        DateTime
  autor               Usuario       @relation("PublicacaoAutor", fields: [autor_id], references: [id])
  perfil              PerfilDoJogo  @relation("PublicacaoPerfil", fields: [perfil_id], references: [id])
}

model Jogo {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  nome      String
  genero    String
  perfis    PerfilDoJogo[] @relation("JogoPerfil")
}